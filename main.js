!function(){"use strict";class e{#e;#t;#s;#r;#o;#n;#i;#a;#l;constructor(e,t,s){this.#t=e.link,this.#e=e.name,this.#s=t,this.#l=s}#c(){this.#r=document.querySelector(this.#s).content.querySelector(".card").cloneNode(!0),this.#o=this.#r.querySelector(".card__image"),this.#n=this.#r.querySelector(".card__button-like"),this.#i=this.#r.querySelector(".card__button-delete"),this.#a=this.#r.querySelector(".card__text"),this.#a.textContent=this.#e,this.#o.setAttribute("src",this.#t),this.#o.setAttribute("alt",this.#e)}#m(){this.#o.addEventListener("click",(()=>{this.#l()})),this.#n.addEventListener("click",(()=>this.#d())),this.#i.addEventListener("click",(()=>this.#u()))}#d(){this.#n.classList.toggle("card__button-like-active")}#u(){this.#r.remove(),this.#r=null}getCardElement(){return this.#c(),this.#m(),this.#r}getCardData(){return{src:this.#t,alt:this.#e}}}class t{#h;#p;#E;#_;#g;#S;#v;#f;#C;constructor(e,t){this.#h=t,this.#p=e.formSelector,this.#E=e.inputSelector,this.#_=e.submitButtonSelector,this.#g=e.inactiveButtonClass,this.#S=e.inputErrorClass,this.#v=e.errorClass,this.#f=[...t.querySelectorAll(e.inputSelector)],this.#C=this.#h.querySelector(this.#_)}#L(e){e.validity.valid?this.#b(e):this.#y(e,e.validationMessage)}#y(e,t){const s=this.#h.querySelector(`.${e.id}-error`);e.classList.add(this.#S),s.textContent=t,s.classList.add(this.#v)}#b(e){const t=this.#h.querySelector(`.${e.id}-error`);e.classList.remove(this.#S),t.classList.remove(this.#v),t.textContent=""}#k(){return this.#f.every((e=>e.validity.valid))}#m(){this.#h.addEventListener("submit",(e=>{e.preventDefault()})),this.#h.addEventListener("reset",(()=>{this.toggleSubmitButton()})),this.#f.forEach((e=>{e.addEventListener("input",(()=>{this.#L(e),this.toggleSubmitButton()}))}))}enableValidation(){this.#m()}toggleSubmitButton(){this.#k()?(this.#C.disabled=!1,this.#C.classList.remove(this.#g)):(this.#C.disabled=!0,this.#C.classList.add(this.#g))}}class s{_modal;_modalCloseButton;constructor(e){this._modal=document.querySelector(e),this._modalCloseButton=this._modal.querySelector(".modal__button-close"),this.close=this.close.bind(this),this.open=this.open.bind(this)}open(){this._modal.classList.add("modal_opened"),document.addEventListener("keydown",this.#B)}close(){this._modal.classList.remove("modal_opened"),document.removeEventListener("keydown",this.#B)}#B=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._modalCloseButton.addEventListener("click",(()=>{this.close()})),this._modal.addEventListener("mousedown",(e=>{e.target===e.currentTarget&&this.close()}))}}class r extends s{#w;#I;#q;constructor(e,t){super(e),this.#w=t,this.#I=this._modal.querySelector(".modal__form"),this.#q=this.#I.querySelectorAll(".modal__form-input")}close(){super.close(),this.#I.reset()}#j(){const e={};return this.#q.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this.#I.addEventListener("submit",(e=>{e.preventDefault(),this.#w(this.#j())}))}}const o={formSelector:".modal__form",inputSelector:".modal__form-input",submitButtonSelector:".modal__button-save",inactiveButtonClass:"modal__button-disabled",inputErrorClass:"modal__form-input-invalid",errorClass:"modal__input-error_active"},n=(document.querySelector(".cards__list"),new class extends s{constructor(e){super(e)}open(e){let{src:t,alt:s}=e;const r=this._modal.querySelector(".modal__image"),o=this._modal.querySelector(".modal__caption");r.src=t,r.alt=s,o.textContent=s,super.open()}}(".modal-picture"));n.setEventListeners();const i=new class{#x;#F;#N;constructor(e,t){let{items:s,renderer:r}=e;this.#x=s,this.#F=r,this.#N=document.querySelector(t)}renderItems(){this.#x.forEach((e=>{this.#F(e)}))}addItem(e){this.#N.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{i.addItem(E(e))}},".cards__list");i.renderItems();const a=new class{#V;#J;constructor(e){let{userNameSelector:t,userJobSelector:s}=e;this.#V=document.querySelector(t),this.#J=document.querySelector(s)}getUserInfo(){return{userName:this.#V.textContent,userJob:this.#J.textContent}}setUserInfo(e){let{name:t,job:s}=e;this.#V.textContent=t,this.#J.textContent=s}}({userNameSelector:".profile__title",userJobSelector:".profile__description"}),l=new r(".modal-profile",(e=>{a.setUserInfo(e),l.close()}));l.setEventListeners();const c=document.querySelector(".modal__form-profile"),m=document.querySelector('[name = "name"]'),d=document.querySelector('[name = "job"]'),u=new t(o,c);u.enableValidation(),document.querySelector(".profile__button-edit").addEventListener("click",(()=>{const{userName:e,userJob:t}=a.getUserInfo();m.value=e,d.value=t,l.open(),u.toggleSubmitButton()}));const h=new r(".modal-add",(e=>{i.addItem(E(e)),h.close()}));h.setEventListeners();const p=new t(o,document.querySelector(".modal__form-add"));function E(t){const s=new e(t,"#card",(()=>{n.open(s.getCardData())}));return s.getCardElement()}p.enableValidation(),document.querySelector(".profile__button-add").addEventListener("click",(()=>{h.open(),p.toggleSubmitButton()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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bUJBQ3BDc0YsRUFBWXZGLFNBQVNDLGNBQWMsa0JBRW5DdUYsRUFBdUIsSUFBSTFFLEVBQWM4QyxFQUFReUIsR0FDdkRHLEVBQXFCbEQsbUJBQ3JCdEMsU0FDR0MsY0FBYyx5QkFDZEssaUJBQWlCLFNBQVMsS0FDekIsTUFBTSxTQUFFd0UsRUFBUSxRQUFFQyxHQUFZTCxFQUFTRyxjQUN2Q1MsRUFBVzNCLE1BQVFtQixFQUNuQlMsRUFBVTVCLE1BQVFvQixFQUNsQkksRUFBYXJDLE9BQ2IwQyxFQUFxQnBELG9CQUFvQixJQUc3QyxNQUFNcUQsRUFBWSxJQUFJcEMsRUFBYyxjQUFlK0IsSUFDakRuQixFQUFZSyxRQUFRRyxFQUFXVyxJQUUvQkssRUFBVTdDLE9BQU8sSUFFbkI2QyxFQUFVdkMsb0JBRVYsTUFDTXdDLEVBQW1CLElBQUk1RSxFQUFjOEMsRUFEdEI1RCxTQUFTQyxjQUFjLHFCQVE1QyxTQUFTd0UsRUFBV0QsR0FDbEIsTUFBTW1CLEVBQU8sSUFBSW5HLEVBQUtnRixFQUFVLFNBQVMsS0FDdkNYLEVBQWFmLEtBQUs2QyxFQUFLaEYsY0FBYyxJQUV2QyxPQUFPZ0YsRUFBS2pGLGdCQUNkLENBWEFnRixFQUFpQnBELG1CQUNqQnRDLFNBQVNDLGNBQWMsd0JBQXdCSyxpQkFBaUIsU0FBUyxLQUN2RW1GLEVBQVUzQyxPQUNWNEMsRUFBaUJ0RCxvQkFBb0IsRyIsInNvdXJjZXMiOlsid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL3BhZ2VzL2luZGV4LmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XHJcbiAgI25hbWU7XHJcbiAgI2ltYWdlO1xyXG4gICNjYXJkU2VsZWN0b3I7XHJcbiAgI2NhcmRFbGVtZW50O1xyXG4gICNjYXJkSW1hZ2U7XHJcbiAgI2NhcmRMaWtlQnV0dG9uO1xyXG4gICNjYXJkRGVsZXRlQnV0dG9uO1xyXG4gICNjYXJkVGV4dDtcclxuICAjaGFuZGxlQ2FyZENsaWNrO1xyXG5cclxuICBjb25zdHJ1Y3RvcihkYXRhLCBjYXJkU2VsZWN0b3IsIGhhbmRsZUNhcmRDbGljaykge1xyXG4gICAgdGhpcy4jaW1hZ2UgPSBkYXRhLmxpbms7XHJcbiAgICB0aGlzLiNuYW1lID0gZGF0YS5uYW1lO1xyXG4gICAgdGhpcy4jY2FyZFNlbGVjdG9yID0gY2FyZFNlbGVjdG9yO1xyXG4gICAgdGhpcy4jaGFuZGxlQ2FyZENsaWNrID0gaGFuZGxlQ2FyZENsaWNrO1xyXG4gIH1cclxuICAjbWFrZUNhcmRFbGVtZW50KCkge1xyXG4gICAgdGhpcy4jY2FyZEVsZW1lbnQgPSBkb2N1bWVudFxyXG4gICAgICAucXVlcnlTZWxlY3Rvcih0aGlzLiNjYXJkU2VsZWN0b3IpXHJcbiAgICAgIC5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZFwiKVxyXG4gICAgICAuY2xvbmVOb2RlKHRydWUpO1xyXG4gICAgdGhpcy4jY2FyZEltYWdlID0gdGhpcy4jY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19pbWFnZVwiKTtcclxuICAgIHRoaXMuI2NhcmRMaWtlQnV0dG9uID1cclxuICAgICAgdGhpcy4jY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19idXR0b24tbGlrZVwiKTtcclxuICAgIHRoaXMuI2NhcmREZWxldGVCdXR0b24gPSB0aGlzLiNjYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICBcIi5jYXJkX19idXR0b24tZGVsZXRlXCJcclxuICAgICk7XHJcbiAgICB0aGlzLiNjYXJkVGV4dCA9IHRoaXMuI2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fdGV4dFwiKTtcclxuICAgIHRoaXMuI2NhcmRUZXh0LnRleHRDb250ZW50ID0gdGhpcy4jbmFtZTtcclxuXHJcbiAgICB0aGlzLiNjYXJkSW1hZ2Uuc2V0QXR0cmlidXRlKFwic3JjXCIsIHRoaXMuI2ltYWdlKTtcclxuICAgIHRoaXMuI2NhcmRJbWFnZS5zZXRBdHRyaWJ1dGUoXCJhbHRcIiwgdGhpcy4jbmFtZSk7XHJcbiAgfVxyXG5cclxuICAjc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLiNjYXJkSW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgdGhpcy4jaGFuZGxlQ2FyZENsaWNrKCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLiNjYXJkTGlrZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT5cclxuICAgICAgdGhpcy4jdG9nZ2xlQWN0aXZlTGlrZSgpXHJcbiAgICApO1xyXG4gICAgdGhpcy4jY2FyZERlbGV0ZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4gdGhpcy4jZGVsZXRlQ2FyZCgpKTtcclxuICB9XHJcblxyXG4gICN0b2dnbGVBY3RpdmVMaWtlKCkge1xyXG4gICAgdGhpcy4jY2FyZExpa2VCdXR0b24uY2xhc3NMaXN0LnRvZ2dsZShcImNhcmRfX2J1dHRvbi1saWtlLWFjdGl2ZVwiKTtcclxuICB9XHJcblxyXG4gICNkZWxldGVDYXJkKCkge1xyXG4gICAgdGhpcy4jY2FyZEVsZW1lbnQucmVtb3ZlKCk7XHJcbiAgICB0aGlzLiNjYXJkRWxlbWVudCA9IG51bGw7XHJcbiAgfVxyXG4gIGdldENhcmRFbGVtZW50KCkge1xyXG4gICAgdGhpcy4jbWFrZUNhcmRFbGVtZW50KCk7XHJcbiAgICB0aGlzLiNzZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgcmV0dXJuIHRoaXMuI2NhcmRFbGVtZW50O1xyXG4gIH1cclxuICBnZXRDYXJkRGF0YSgpIHtcclxuICAgIHJldHVybiB7IHNyYzogdGhpcy4jaW1hZ2UsIGFsdDogdGhpcy4jbmFtZSB9O1xyXG4gIH1cclxufVxyXG4iLCJjb25zdCBjb25maWcgPSB7XHJcbiAgZm9ybVNlbGVjdG9yOiBcIi5tb2RhbF9fZm9ybVwiLFxyXG4gIGlucHV0U2VsZWN0b3I6IFwiLm1vZGFsX19mb3JtLWlucHV0XCIsXHJcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLm1vZGFsX19idXR0b24tc2F2ZVwiLFxyXG4gIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwibW9kYWxfX2J1dHRvbi1kaXNhYmxlZFwiLFxyXG4gIGlucHV0RXJyb3JDbGFzczogXCJtb2RhbF9fZm9ybS1pbnB1dC1pbnZhbGlkXCIsXHJcbiAgZXJyb3JDbGFzczogXCJtb2RhbF9faW5wdXQtZXJyb3JfYWN0aXZlXCIsXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JtVmFsaWRhdG9yIHtcclxuICAjZm9ybUVsZW1lbnQ7XHJcbiAgI2Zvcm1TZWxlY3RvcjtcclxuICAjaW5wdXRTZWxlY3RvcjtcclxuICAjc3VibWl0QnV0dG9uU2VsZWN0b3I7XHJcbiAgI2luYWN0aXZlQnV0dG9uQ2xhc3M7XHJcbiAgI2lucHV0RXJyb3JDbGFzcztcclxuICAjZXJyb3JDbGFzcztcclxuICAjZm9ybUlucHV0TGlzdDtcclxuICAjZm9ybUJ1dHRvbjtcclxuICBjb25zdHJ1Y3RvcihzZXR0aW5ncywgZm9ybUVsZW1lbnQpIHtcclxuICAgIHRoaXMuI2Zvcm1FbGVtZW50ID0gZm9ybUVsZW1lbnQ7XHJcbiAgICB0aGlzLiNmb3JtU2VsZWN0b3IgPSBzZXR0aW5ncy5mb3JtU2VsZWN0b3I7XHJcbiAgICB0aGlzLiNpbnB1dFNlbGVjdG9yID0gc2V0dGluZ3MuaW5wdXRTZWxlY3RvcjtcclxuICAgIHRoaXMuI3N1Ym1pdEJ1dHRvblNlbGVjdG9yID0gc2V0dGluZ3Muc3VibWl0QnV0dG9uU2VsZWN0b3I7XHJcbiAgICB0aGlzLiNpbmFjdGl2ZUJ1dHRvbkNsYXNzID0gc2V0dGluZ3MuaW5hY3RpdmVCdXR0b25DbGFzcztcclxuICAgIHRoaXMuI2lucHV0RXJyb3JDbGFzcyA9IHNldHRpbmdzLmlucHV0RXJyb3JDbGFzcztcclxuICAgIHRoaXMuI2Vycm9yQ2xhc3MgPSBzZXR0aW5ncy5lcnJvckNsYXNzO1xyXG4gICAgdGhpcy4jZm9ybUlucHV0TGlzdCA9IFtcclxuICAgICAgLi4uZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbChzZXR0aW5ncy5pbnB1dFNlbGVjdG9yKSxcclxuICAgIF07XHJcbiAgICB0aGlzLiNmb3JtQnV0dG9uID0gdGhpcy4jZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihcclxuICAgICAgdGhpcy4jc3VibWl0QnV0dG9uU2VsZWN0b3JcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICAjdG9nZ2xlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpIHtcclxuICAgIGlmICghaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKSB7XHJcbiAgICAgIHRoaXMuI3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCwgaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuI2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAjc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50LCBlcnJvck1lc3NhZ2UpIHtcclxuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuI2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgIGAuJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYFxyXG4gICAgKTtcclxuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuI2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBlcnJvck1lc3NhZ2U7XHJcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLiNlcnJvckNsYXNzKTtcclxuICB9XHJcblxyXG4gICNoaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpIHtcclxuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuI2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgIGAuJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYFxyXG4gICAgKTtcclxuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuI2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLiNlcnJvckNsYXNzKTtcclxuICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IFwiXCI7XHJcbiAgfVxyXG5cclxuICAjY2hlY2tGb3JtVmFsaWRpdHkoKSB7XHJcbiAgICByZXR1cm4gdGhpcy4jZm9ybUlucHV0TGlzdC5ldmVyeSgoaW5wdXRGaWVsZCkgPT4ge1xyXG4gICAgICByZXR1cm4gaW5wdXRGaWVsZC52YWxpZGl0eS52YWxpZDtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgI3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy4jZm9ybUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7XHJcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgfSk7XHJcbiAgICB0aGlzLiNmb3JtRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwicmVzZXRcIiwgKCkgPT4ge1xyXG4gICAgICB0aGlzLnRvZ2dsZVN1Ym1pdEJ1dHRvbigpO1xyXG4gICAgfSk7XHJcbiAgICB0aGlzLiNmb3JtSW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xyXG4gICAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsICgpID0+IHtcclxuICAgICAgICB0aGlzLiN0b2dnbGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XHJcbiAgICAgICAgdGhpcy50b2dnbGVTdWJtaXRCdXR0b24oKTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGVuYWJsZVZhbGlkYXRpb24oKSB7XHJcbiAgICB0aGlzLiNzZXRFdmVudExpc3RlbmVycygpO1xyXG4gIH1cclxuXHJcbiAgdG9nZ2xlU3VibWl0QnV0dG9uKCkge1xyXG4gICAgaWYgKHRoaXMuI2NoZWNrRm9ybVZhbGlkaXR5KCkpIHtcclxuICAgICAgdGhpcy4jZm9ybUJ1dHRvbi5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICB0aGlzLiNmb3JtQnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUodGhpcy4jaW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLiNmb3JtQnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgdGhpcy4jZm9ybUJ1dHRvbi5jbGFzc0xpc3QuYWRkKHRoaXMuI2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cCB7XHJcbiAgX21vZGFsO1xyXG4gIF9tb2RhbENsb3NlQnV0dG9uO1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgIHRoaXMuX21vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cFNlbGVjdG9yKTtcclxuICAgIHRoaXMuX21vZGFsQ2xvc2VCdXR0b24gPSB0aGlzLl9tb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19idXR0b24tY2xvc2VcIik7XHJcbiAgICB0aGlzLmNsb3NlID0gdGhpcy5jbG9zZS5iaW5kKHRoaXMpO1xyXG4gICAgdGhpcy5vcGVuID0gdGhpcy5vcGVuLmJpbmQodGhpcyk7XHJcbiAgfVxyXG4gIG9wZW4oKSB7XHJcbiAgICB0aGlzLl9tb2RhbC5jbGFzc0xpc3QuYWRkKFwibW9kYWxfb3BlbmVkXCIpO1xyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy4jaGFuZGxlRXNjQ2xvc2UpO1xyXG4gIH1cclxuICBjbG9zZSgpIHtcclxuICAgIHRoaXMuX21vZGFsLmNsYXNzTGlzdC5yZW1vdmUoXCJtb2RhbF9vcGVuZWRcIik7XHJcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLiNoYW5kbGVFc2NDbG9zZSk7XHJcbiAgfVxyXG4gICNoYW5kbGVFc2NDbG9zZSA9IChldmVudCkgPT4ge1xyXG4gICAgaWYgKGV2ZW50LmtleSA9PT0gXCJFc2NhcGVcIikge1xyXG4gICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICB9XHJcbiAgfTtcclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX21vZGFsQ2xvc2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgfSk7XHJcbiAgICB0aGlzLl9tb2RhbC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIChldmVudCkgPT4ge1xyXG4gICAgICBpZiAoZXZlbnQudGFyZ2V0ID09PSBldmVudC5jdXJyZW50VGFyZ2V0KSB7XHJcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XHJcbiAgI2hhbmRsZUZvcm1TdWJtaXQ7XHJcbiAgI21vZGFsRm9ybTtcclxuXHJcbiAgI21vZGFsSW5wdXRzO1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IsIGhhbmRsZUZvcm1TdWJtaXQpIHtcclxuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xyXG5cclxuICAgIHRoaXMuI2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xyXG4gICAgdGhpcy4jbW9kYWxGb3JtID0gdGhpcy5fbW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fZm9ybVwiKTtcclxuICAgIHRoaXMuI21vZGFsSW5wdXRzID0gdGhpcy4jbW9kYWxGb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoXCIubW9kYWxfX2Zvcm0taW5wdXRcIik7XHJcbiAgfVxyXG4gIGNsb3NlKCkge1xyXG4gICAgc3VwZXIuY2xvc2UoKTtcclxuICAgIHRoaXMuI21vZGFsRm9ybS5yZXNldCgpO1xyXG4gIH1cclxuICAjZ2V0SW5wdXRWYWx1ZXMoKSB7XHJcbiAgICBjb25zdCBpbnB1dHNPYmplY3QgPSB7fTtcclxuICAgIHRoaXMuI21vZGFsSW5wdXRzLmZvckVhY2goKGVsZW1lbnQpID0+IHtcclxuICAgICAgaW5wdXRzT2JqZWN0W2VsZW1lbnQubmFtZV0gPSBlbGVtZW50LnZhbHVlO1xyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIGlucHV0c09iamVjdDtcclxuICB9XHJcblxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbiAgICB0aGlzLiNtb2RhbEZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZlbnQpID0+IHtcclxuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgdGhpcy4jaGFuZGxlRm9ybVN1Ym1pdCh0aGlzLiNnZXRJbnB1dFZhbHVlcygpKTtcclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG4iLCJjb25zdCBjb25maWcgPSB7XHJcbiAgZm9ybVNlbGVjdG9yOiBcIi5tb2RhbF9fZm9ybVwiLFxyXG4gIGlucHV0U2VsZWN0b3I6IFwiLm1vZGFsX19mb3JtLWlucHV0XCIsXHJcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLm1vZGFsX19idXR0b24tc2F2ZVwiLFxyXG4gIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwibW9kYWxfX2J1dHRvbi1kaXNhYmxlZFwiLFxyXG4gIGlucHV0RXJyb3JDbGFzczogXCJtb2RhbF9fZm9ybS1pbnB1dC1pbnZhbGlkXCIsXHJcbiAgZXJyb3JDbGFzczogXCJtb2RhbF9faW5wdXQtZXJyb3JfYWN0aXZlXCIsXHJcbn07XHJcblxyXG5jb25zdCBpbml0aWFsQ2FyZHMgPSBbXHJcbiAge1xyXG4gICAgbmFtZTogXCJZb3NlbWl0ZSBWYWxsZXlcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC95b3NlbWl0ZS5qcGdcIixcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6IFwiTGFrZSBMb3Vpc2VcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYWtlLWxvdWlzZS5qcGdcIixcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6IFwiQmFsZCBNb3VudGFpbnNcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9iYWxkLW1vdW50YWlucy5qcGdcIixcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6IFwiTGF0ZW1hclwiLFxyXG4gICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L2xhdGVtYXIuanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIlZhbm9pc2UgTmF0aW9uYWwgUGFya1wiLFxyXG4gICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L3Zhbm9pc2UuanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIkxhZ28gZGkgQnJhaWVzXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvbGFnby5qcGdcIixcclxuICB9LFxyXG5dO1xyXG5cclxuZXhwb3J0IHsgY29uZmlnLCBpbml0aWFsQ2FyZHMgfTtcclxuIiwiaW1wb3J0IENhcmQgZnJvbSBcIi4uL2NvbXBvbmVudHMvQ2FyZC5qc1wiO1xyXG5pbXBvcnQgRm9ybVZhbGlkYXRvciBmcm9tIFwiLi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzXCI7XHJcbmltcG9ydCBTZWN0aW9uIGZyb20gXCIuLi9jb21wb25lbnRzL1NlY3Rpb24uanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzXCI7XHJcbmltcG9ydCBVc2VySW5mbyBmcm9tIFwiLi4vY29tcG9uZW50cy9Vc2VySW5mby5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XHJcbmltcG9ydCBcIi4vaW5kZXguY3NzXCI7XHJcbmltcG9ydCB7IGNvbmZpZywgaW5pdGlhbENhcmRzIH0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0YW50cy5qc1wiO1xyXG5cclxuY29uc3QgY2FyZExpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRzX19saXN0XCIpO1xyXG5cclxuY29uc3QgcGljdHVyZU1vZGFsID0gbmV3IFBvcHVwV2l0aEltYWdlKFwiLm1vZGFsLXBpY3R1cmVcIik7XHJcbnBpY3R1cmVNb2RhbC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5jb25zdCBjYXJkU2VjdGlvbiA9IG5ldyBTZWN0aW9uKFxyXG4gIHtcclxuICAgIGl0ZW1zOiBpbml0aWFsQ2FyZHMsXHJcbiAgICByZW5kZXJlcjogKGNhcmREYXRhKSA9PiB7XHJcbiAgICAgIGNhcmRTZWN0aW9uLmFkZEl0ZW0oY3JlYXRlQ2FyZChjYXJkRGF0YSkpO1xyXG4gICAgfSxcclxuICB9LFxyXG4gIFwiLmNhcmRzX19saXN0XCJcclxuKTtcclxuY2FyZFNlY3Rpb24ucmVuZGVySXRlbXMoKTtcclxuXHJcbmNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKHtcclxuICB1c2VyTmFtZVNlbGVjdG9yOiBcIi5wcm9maWxlX190aXRsZVwiLFxyXG4gIHVzZXJKb2JTZWxlY3RvcjogXCIucHJvZmlsZV9fZGVzY3JpcHRpb25cIixcclxufSk7XHJcbmNvbnN0IHByb2ZpbGVNb2RhbCA9IG5ldyBQb3B1cFdpdGhGb3JtKFwiLm1vZGFsLXByb2ZpbGVcIiwgKGlucHV0cykgPT4ge1xyXG4gIHVzZXJJbmZvLnNldFVzZXJJbmZvKGlucHV0cyk7XHJcbiAgcHJvZmlsZU1vZGFsLmNsb3NlKCk7XHJcbn0pO1xyXG5wcm9maWxlTW9kYWwuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmNvbnN0IG1vZGFsRm9ybVByb2ZpbGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19mb3JtLXByb2ZpbGVcIik7XHJcbmNvbnN0IGlucHV0VGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbbmFtZSA9IFwibmFtZVwiXScpO1xyXG5jb25zdCBpbnB1dERlc2MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbbmFtZSA9IFwiam9iXCJdJyk7XHJcblxyXG5jb25zdCBwcm9maWxlRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKGNvbmZpZywgbW9kYWxGb3JtUHJvZmlsZSk7XHJcbnByb2ZpbGVGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuZG9jdW1lbnRcclxuICAucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19idXR0b24tZWRpdFwiKVxyXG4gIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgY29uc3QgeyB1c2VyTmFtZSwgdXNlckpvYiB9ID0gdXNlckluZm8uZ2V0VXNlckluZm8oKTtcclxuICAgIGlucHV0VGl0bGUudmFsdWUgPSB1c2VyTmFtZTtcclxuICAgIGlucHV0RGVzYy52YWx1ZSA9IHVzZXJKb2I7XHJcbiAgICBwcm9maWxlTW9kYWwub3BlbigpO1xyXG4gICAgcHJvZmlsZUZvcm1WYWxpZGF0b3IudG9nZ2xlU3VibWl0QnV0dG9uKCk7XHJcbiAgfSk7XHJcblxyXG5jb25zdCBjYXJkTW9kYWwgPSBuZXcgUG9wdXBXaXRoRm9ybShcIi5tb2RhbC1hZGRcIiwgKGlucHV0cykgPT4ge1xyXG4gIGNhcmRTZWN0aW9uLmFkZEl0ZW0oY3JlYXRlQ2FyZChpbnB1dHMpKTtcclxuXHJcbiAgY2FyZE1vZGFsLmNsb3NlKCk7XHJcbn0pO1xyXG5jYXJkTW9kYWwuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmNvbnN0IG1vZGFsRm9ybUFkZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm0tYWRkXCIpO1xyXG5jb25zdCBhZGRGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IoY29uZmlnLCBtb2RhbEZvcm1BZGQpO1xyXG5hZGRGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19idXR0b24tYWRkXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgY2FyZE1vZGFsLm9wZW4oKTtcclxuICBhZGRGb3JtVmFsaWRhdG9yLnRvZ2dsZVN1Ym1pdEJ1dHRvbigpO1xyXG59KTtcclxuXHJcbmZ1bmN0aW9uIGNyZWF0ZUNhcmQoY2FyZERhdGEpIHtcclxuICBjb25zdCBjYXJkID0gbmV3IENhcmQoY2FyZERhdGEsIFwiI2NhcmRcIiwgKCkgPT4ge1xyXG4gICAgcGljdHVyZU1vZGFsLm9wZW4oY2FyZC5nZXRDYXJkRGF0YSgpKTtcclxuICB9KTtcclxuICByZXR1cm4gY2FyZC5nZXRDYXJkRWxlbWVudCgpO1xyXG59XHJcbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuICB9XHJcbiAgb3Blbih7IHNyYywgYWx0IH0pIHtcclxuICAgIGNvbnN0IG1vZGFsSW1hZ2UgPSB0aGlzLl9tb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19pbWFnZVwiKTtcclxuICAgIGNvbnN0IG1vZGFsQ2FwdGlvbiA9IHRoaXMuX21vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2NhcHRpb25cIik7XHJcbiAgICBtb2RhbEltYWdlLnNyYyA9IHNyYztcclxuICAgIG1vZGFsSW1hZ2UuYWx0ID0gYWx0O1xyXG4gICAgbW9kYWxDYXB0aW9uLnRleHRDb250ZW50ID0gYWx0O1xyXG4gICAgc3VwZXIub3BlbigpO1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcclxuICAjaXRlbXM7XHJcbiAgI3JlbmRlcmVyO1xyXG4gICNjb250YWluZXI7XHJcbiAgY29uc3RydWN0b3IoeyBpdGVtcywgcmVuZGVyZXIgfSwgY29udGFpbmVyU2VsZWN0b3IpIHtcclxuICAgIHRoaXMuI2l0ZW1zID0gaXRlbXM7XHJcbiAgICB0aGlzLiNyZW5kZXJlciA9IHJlbmRlcmVyO1xyXG4gICAgdGhpcy4jY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihjb250YWluZXJTZWxlY3Rvcik7XHJcbiAgfVxyXG4gIHJlbmRlckl0ZW1zKCkge1xyXG4gICAgdGhpcy4jaXRlbXMuZm9yRWFjaCgoZWxlbWVudCkgPT4ge1xyXG4gICAgICB0aGlzLiNyZW5kZXJlcihlbGVtZW50KTtcclxuICAgIH0pO1xyXG4gIH1cclxuICBhZGRJdGVtKGVsZW1lbnQpIHtcclxuICAgIHRoaXMuI2NvbnRhaW5lci5wcmVwZW5kKGVsZW1lbnQpO1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mbyB7XHJcbiAgI3VzZXJOYW1lRWxlbWVudDtcclxuICAjdXNlckpvYkVsZW1lbnQ7XHJcbiAgY29uc3RydWN0b3IoeyB1c2VyTmFtZVNlbGVjdG9yLCB1c2VySm9iU2VsZWN0b3IgfSkge1xyXG4gICAgdGhpcy4jdXNlck5hbWVFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih1c2VyTmFtZVNlbGVjdG9yKTtcclxuICAgIHRoaXMuI3VzZXJKb2JFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih1c2VySm9iU2VsZWN0b3IpO1xyXG4gIH1cclxuICBnZXRVc2VySW5mbygpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHVzZXJOYW1lOiB0aGlzLiN1c2VyTmFtZUVsZW1lbnQudGV4dENvbnRlbnQsXHJcbiAgICAgIHVzZXJKb2I6IHRoaXMuI3VzZXJKb2JFbGVtZW50LnRleHRDb250ZW50LFxyXG4gICAgfTtcclxuICB9XHJcbiAgc2V0VXNlckluZm8oeyBuYW1lLCBqb2IgfSkge1xyXG4gICAgdGhpcy4jdXNlck5hbWVFbGVtZW50LnRleHRDb250ZW50ID0gbmFtZTtcclxuICAgIHRoaXMuI3VzZXJKb2JFbGVtZW50LnRleHRDb250ZW50ID0gam9iO1xyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOlsiQ2FyZCIsImNvbnN0cnVjdG9yIiwiZGF0YSIsImNhcmRTZWxlY3RvciIsImhhbmRsZUNhcmRDbGljayIsInRoaXMiLCJsaW5rIiwibmFtZSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJ0ZXh0Q29udGVudCIsInNldEF0dHJpYnV0ZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJyZW1vdmUiLCJnZXRDYXJkRWxlbWVudCIsImdldENhcmREYXRhIiwic3JjIiwiYWx0IiwiRm9ybVZhbGlkYXRvciIsInNldHRpbmdzIiwiZm9ybUVsZW1lbnQiLCJmb3JtU2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJpbnB1dEVsZW1lbnQiLCJ2YWxpZGl0eSIsInZhbGlkIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJlcnJvck1lc3NhZ2UiLCJlcnJvckVsZW1lbnQiLCJpZCIsImFkZCIsImV2ZXJ5IiwiaW5wdXRGaWVsZCIsImV2dCIsInByZXZlbnREZWZhdWx0IiwidG9nZ2xlU3VibWl0QnV0dG9uIiwiZm9yRWFjaCIsImVuYWJsZVZhbGlkYXRpb24iLCJkaXNhYmxlZCIsIlBvcHVwIiwiX21vZGFsIiwiX21vZGFsQ2xvc2VCdXR0b24iLCJwb3B1cFNlbGVjdG9yIiwiY2xvc2UiLCJiaW5kIiwib3BlbiIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJldmVudCIsImtleSIsInNldEV2ZW50TGlzdGVuZXJzIiwidGFyZ2V0IiwiY3VycmVudFRhcmdldCIsIlBvcHVwV2l0aEZvcm0iLCJoYW5kbGVGb3JtU3VibWl0Iiwic3VwZXIiLCJyZXNldCIsImlucHV0c09iamVjdCIsImVsZW1lbnQiLCJ2YWx1ZSIsImNvbmZpZyIsInBpY3R1cmVNb2RhbCIsIl9yZWYiLCJtb2RhbEltYWdlIiwibW9kYWxDYXB0aW9uIiwiY2FyZFNlY3Rpb24iLCJjb250YWluZXJTZWxlY3RvciIsIml0ZW1zIiwicmVuZGVyZXIiLCJyZW5kZXJJdGVtcyIsImFkZEl0ZW0iLCJwcmVwZW5kIiwiY2FyZERhdGEiLCJjcmVhdGVDYXJkIiwidXNlckluZm8iLCJ1c2VyTmFtZVNlbGVjdG9yIiwidXNlckpvYlNlbGVjdG9yIiwiZ2V0VXNlckluZm8iLCJ1c2VyTmFtZSIsInVzZXJKb2IiLCJzZXRVc2VySW5mbyIsIl9yZWYyIiwiam9iIiwicHJvZmlsZU1vZGFsIiwiaW5wdXRzIiwibW9kYWxGb3JtUHJvZmlsZSIsImlucHV0VGl0bGUiLCJpbnB1dERlc2MiLCJwcm9maWxlRm9ybVZhbGlkYXRvciIsImNhcmRNb2RhbCIsImFkZEZvcm1WYWxpZGF0b3IiLCJjYXJkIl0sInNvdXJjZVJvb3QiOiIifQ==